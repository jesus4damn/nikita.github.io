{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'http://emphasoft-test-assignment.herokuapp.com/'\n});\nexport const authAPI = {\n  login(username, password) {\n    instance.withCredentials = false;\n    return axios.post('api-token-auth/', {\n      username,\n      password\n    }).then(res => res.data).catch(error => error.request);\n  }\n\n};\nexport const usersAPI = {\n  get() {\n    instance.withCredentials = true;\n    return instance.get(\"api/v1/users/\").then(res => res.data).catch(error => error.request);\n  }\n\n};","map":{"version":3,"sources":["/Users/nikitaakusev/Documents/React/TestAssignment/test/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","authAPI","login","username","password","post","then","res","data","catch","error","request","usersAPI","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAjB;AAMA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrBP,IAAAA,QAAQ,CAACE,eAAT,GAA2B,KAA3B;AACA,WAAOH,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8B;AAACF,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAA9B,EAAoDE,IAApD,CAAyDC,GAAG,IAAIA,GAAG,CAACC,IAApE,EAA0EC,KAA1E,CAAgFC,KAAK,IAAIA,KAAK,CAACC,OAA/F,CAAP;AACH;;AAJkB,CAAhB;AAOP,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,GAAG,GAAE;AACDhB,IAAAA,QAAQ,CAACE,eAAT,GAA2B,IAA3B;AACA,WAAOF,QAAQ,CAACgB,GAAT,CAAa,eAAb,EAA8BP,IAA9B,CAAmCC,GAAG,IAAIA,GAAG,CAACC,IAA9C,EAAoDC,KAApD,CAA0DC,KAAK,IAAIA,KAAK,CAACC,OAAzE,CAAP;AACH;;AAJmB,CAAjB","sourcesContent":["import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'http://emphasoft-test-assignment.herokuapp.com/'\n});\n\n\nexport const authAPI = {\n    login(username, password){\n        instance.withCredentials = false;\n        return axios.post('api-token-auth/', {username, password}).then(res => res.data).catch(error => error.request);\n    }\n}\n\nexport const usersAPI = {\n    get(){\n        instance.withCredentials = true;\n        return instance.get(\"api/v1/users/\").then(res => res.data).catch(error => error.request);\n    }\n}"]},"metadata":{},"sourceType":"module"}