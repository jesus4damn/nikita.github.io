{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: false,\n  baseURL: 'http://emphasoft-test-assignment.herokuapp.com/'\n});\nexport const authAPI = {\n  login(username, password) {\n    return instance.post('api-token-auth/', {\n      username,\n      password\n    }).then(res => res.data).catch(error => error.request);\n  }\n\n};\nexport const usersAPI = {\n  get(token) {\n    return instance.get(\"api/v1/users/\", {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => res.data).catch(error => error.request);\n  }\n\n};","map":{"version":3,"sources":["/Users/nikitaakusev/Documents/React/TestAssignment/test/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","authAPI","login","username","password","post","then","res","data","catch","error","request","usersAPI","get","token","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,KADS;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAjB;AAMA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrB,WAAOP,QAAQ,CAACQ,IAAT,CAAc,iBAAd,EAAiC;AAACF,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAjC,EAAuDE,IAAvD,CAA4DC,GAAG,IAAIA,GAAG,CAACC,IAAvE,EAA6EC,KAA7E,CAAmFC,KAAK,IAAIA,KAAK,CAACC,OAAlG,CAAP;AACH;;AAHkB,CAAhB;AAMP,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,GAAG,CAACC,KAAD,EAAO;AACN,WAAOjB,QAAQ,CAACgB,GAAT,CAAa,eAAb,EAA8B;AACjCE,MAAAA,OAAO,EAAE;AACL,wBAAgB,mCADX;AAEL,yBAAkB,YAAYD;AAFzB;AADwB,KAA9B,EAKJR,IALI,CAKCC,GAAG,IAAIA,GAAG,CAACC,IALZ,EAKkBC,KALlB,CAKwBC,KAAK,IAAIA,KAAK,CAACC,OALvC,CAAP;AAMH;;AARmB,CAAjB","sourcesContent":["import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: false,\n    baseURL: 'http://emphasoft-test-assignment.herokuapp.com/'\n});\n\n\nexport const authAPI = {\n    login(username, password){\n        return instance.post('api-token-auth/', {username, password}).then(res => res.data).catch(error => error.request);\n    }\n}\n\nexport const usersAPI = {\n    get(token){\n        return instance.get(\"api/v1/users/\", {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization' : 'Bearer ' + token\n            }\n        }).then(res => res.data).catch(error => error.request);\n    }\n}"]},"metadata":{},"sourceType":"module"}