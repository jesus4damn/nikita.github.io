{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_AUTH = \"auth/SET_AUTH\";\nlet initialState = {\n  auth: true,\n  token: \"\"\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH:\n      {\n        return { ...state,\n          token: action.token,\n          auth: action.auth\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuth = (token, auth) => ({\n  type: SET_AUTH,\n  token,\n  auth\n});\nexport const auth = (username, password) => async dispatch => {\n  let response = null;\n\n  try {\n    response = await authAPI.login(username, password);\n  } catch {\n    response = null;\n    console.log(\"ErrorLogin\");\n    dispatch(stopSubmit(\"login\", {\n      _error: \"Something is wrong with the server!\"\n    }));\n    return;\n  }\n\n  if (response.statusText === \"Bad Request\") {\n    dispatch(stopSubmit(\"login\", {\n      _error: \"Wrong data!\"\n    }));\n  } else {\n    dispatch(setAuth(response.token, true));\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/nikitaakusev/Documents/React/TestAssignment/test/src/redux/auth-reducer.js"],"names":["authAPI","stopSubmit","SET_AUTH","initialState","auth","token","authReducer","state","action","type","setAuth","username","password","dispatch","response","login","console","log","_error","statusText"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,eAAjB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAC,IADU;AAEfC,EAAAA,KAAK,EAAC;AAFS,CAAnB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACI;AACI,eAAO,EAAC,GAAGK,KAAJ;AAAWF,UAAAA,KAAK,EAAEG,MAAM,CAACH,KAAzB;AAAgCD,UAAAA,IAAI,EAAEI,MAAM,CAACJ;AAA7C,SAAP;AACH;;AACL;AACI,aAAOG,KAAP;AANR;AAQH,CATD;;AAYA,OAAO,MAAMG,OAAO,GAAG,CAACL,KAAD,EAAQD,IAAR,MAAkB;AAACK,EAAAA,IAAI,EAACP,QAAN;AAAgBG,EAAAA,KAAhB;AAAuBD,EAAAA;AAAvB,CAAlB,CAAhB;AAEP,OAAO,MAAMA,IAAI,GAAG,CAACO,QAAD,EAAWC,QAAX,KAAwB,MAAMC,QAAN,IAAkB;AAC1D,MAAIC,QAAQ,GAAG,IAAf;;AACA,MACA;AACIA,IAAAA,QAAQ,GAAG,MAAMd,OAAO,CAACe,KAAR,CAAcJ,QAAd,EAAwBC,QAAxB,CAAjB;AACH,GAHD,CAIA,MACA;AACIE,IAAAA,QAAQ,GAAG,IAAX;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAJ,IAAAA,QAAQ,CAACZ,UAAU,CAAC,OAAD,EAAU;AAACiB,MAAAA,MAAM,EAAE;AAAT,KAAV,CAAX,CAAR;AACA;AACH;;AACD,MAAGJ,QAAQ,CAACK,UAAT,KAAwB,aAA3B,EAAyC;AACrCN,IAAAA,QAAQ,CAACZ,UAAU,CAAC,OAAD,EAAU;AAACiB,MAAAA,MAAM,EAAE;AAAT,KAAV,CAAX,CAAR;AACH,GAFD,MAEO;AACHL,IAAAA,QAAQ,CAACH,OAAO,CAACI,QAAQ,CAACT,KAAV,EAAiB,IAAjB,CAAR,CAAR;AACH;AACJ,CAlBM;AAqBP,eAAeC,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH = \"auth/SET_AUTH\";\n\nlet initialState = {\n    auth:true,\n    token:\"\"\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            {\n                return {...state, token: action.token, auth: action.auth};\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuth = (token, auth) => ({type:SET_AUTH, token, auth});\n\nexport const auth = (username, password) => async dispatch => {\n    let response = null;\n    try\n    {\n        response = await authAPI.login(username, password);\n    }\n    catch\n    {\n        response = null;\n        console.log(\"ErrorLogin\");\n        dispatch(stopSubmit(\"login\", {_error: \"Something is wrong with the server!\"}));\n        return;\n    }\n    if(response.statusText === \"Bad Request\"){\n        dispatch(stopSubmit(\"login\", {_error: \"Wrong data!\"}));\n    } else {\n        dispatch(setAuth(response.token, true));\n    }\n}\n\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}